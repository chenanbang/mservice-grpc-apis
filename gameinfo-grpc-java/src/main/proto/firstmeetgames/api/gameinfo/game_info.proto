syntax = "proto3";
package firstmeetgames.api.gameinfo;


option java_multiple_files = true;
option java_package = "com.github.firstmeetgames.mservice.grpc.apis.gameinfo";
option java_outer_classname = "GameInfoApiProto";

import "firstmeetgames/api/common/common.proto";
import "google/rpc/status.proto";
import "google/protobuf/field_mask.proto";
import "google/protobuf/timestamp.proto";
import "firstmeetgames/api/gameinfo/game_info_result.proto";


service GameInfoApi {
  rpc GetGameRoles(GetGameRolesRequest) returns (GetGameRolesResponse){
  }

  rpc GetGameServers(GetGameServersRequest) returns (GetGameServersResponse){
  }

  rpc GetGamePlatforms(GetGamePlatformsRequest) returns (GetGamePlatformsResponse){
  }

  rpc GetGamePlatformServerRoles(GetGamePlatformServerRolesRequest) returns (GetGamePlatformServerRolesResponse){
  }

  rpc QueryGameInterfaces(QueryGameInterfacesRequest) returns (QueryGameInterfacesResponse){
  }
  
  rpc GetGameInterface (GetGameInterfaceRequest) returns (GetGameInterfaceResponse) {
  }

  rpc UpdateGameInterface (UpdateGameInterfaceRequest) returns (UpdateGameInterfaceResponse) {
  }

  rpc AddGameInterface (AddGameInterfaceRequest) returns (AddGameInterfaceResponse) {
  }

  rpc DeleteGameInterface (DeleteGameInterfaceRequest) returns (DeleteGameInterfaceResponse) {
  }

  rpc DeleteGameInterfaceCache (DeleteGameInterfaceCacheRequest) returns (DeleteGameInterfaceCacheResponse) {
  }
}

message GetGameRolesRequest {
  string client_id = 1;
  string url_type = 2;
  string platform_id = 3;
  string server_id = 4;
  string user_id = 5;
}

message GetGameRolesResponse {
  repeated RoleInfo role_list = 1;
  google.rpc.Status status = 2;
}

message GetGameServersRequest {
  string client_id = 1;
  string url_type = 2;
  string platform_id = 3;
}

message GetGameServersResponse {
  repeated ServerInfo server_list = 1;
  google.rpc.Status status = 2;
}

message GetGamePlatformsRequest {
  string client_id = 1;
  string url_type = 2;
}

message GetGamePlatformsResponse {
  repeated PlatformInfo platform_list = 1;
  google.rpc.Status status = 2;
}

message GetGamePlatformServerRolesRequest {
  string client_id = 1;
  string user_id = 2;
}

message GetGamePlatformServerRolesResponse {
  GamePlatformServerRoleInfo game_platform_server_role_info = 1;
  google.rpc.Status status = 2;
}

message GetGameInterfaceRequest {
  string client_id = 1;
  string url_type = 2;
}

message GetGameInterfaceResponse {
  GameInterface game_interface = 1;
  google.rpc.Status status = 2;
}

message QueryGameInterfacesRequest {
  string client_id = 1;
  int32 page_size = 2;
  int32 page = 3;
}

message QueryGameInterfacesResponse {
  GameInterfacePage game_interface_page = 1;
  google.rpc.Status status = 2;
}

message UpdateGameInterfaceRequest {
  GameInterface game_interface = 1;
}

message UpdateGameInterfaceResponse {
  google.rpc.Status status = 1;
}

message AddGameInterfaceRequest {
  GameInterface game_interface = 1;
}

message AddGameInterfaceResponse {
  google.rpc.Status status = 1;
}

message DeleteGameInterfaceRequest {
  string client_id = 1;
  string url_type = 2;
}

message DeleteGameInterfaceResponse {
  google.rpc.Status status = 1;
}

message DeleteGameInterfaceCacheRequest {
}

message DeleteGameInterfaceCacheResponse {
  string result = 1; //OK or FAIL
  google.rpc.Status status = 2;
}