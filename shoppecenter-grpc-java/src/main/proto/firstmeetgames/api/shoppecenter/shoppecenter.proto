syntax = "proto3";
package firstmeetgames.api.shoppecenter;


option java_multiple_files = true;
option java_package = "com.github.firstmeetgames.mservice.grpc.apis.shoppecenter";
option java_outer_classname = "ShoppecenterApiProto";


import "firstmeetgames/api/shoppecenter/variant.proto";
import "firstmeetgames/api/shoppecenter/product.proto";
import "firstmeetgames/api/shoppecenter/goods.proto";
import "google/rpc/status.proto";

// The shoppecenter service definition.
service ShoppecenterApi {

  //Get variants
  rpc GetVariant (GetVariantRequest) returns (GetVariantResponse) {
  }

  rpc GetProduct (GetProductRequest) returns (GetProductResponse) {
  }

  rpc QueryProducts (QueryProductRequest) returns (QueryProductResponse) {
  }

  rpc UpdateProduct (UpdateProductRequest) returns (UpdateProductResponse) {
  }

  rpc AddProduct (AddProductRequest) returns (AddProductResponse) {
  }

  rpc DeleteProduct (DeleteProductRequest) returns (DeleteProductResponse) {
  }

  rpc GetGoods (GetGoodsRequest) returns (GetGoodsResponse) {
  }

  rpc QueryGoods (QueryGoodsRequest) returns (QueryGoodsResponse) {
  }

  rpc UpdateGoods (UpdateGoodsRequest) returns (UpdateGoodsResponse) {
  }

  rpc AddGoods (AddGoodsRequest) returns (AddGoodsResponse) {
  }

  rpc DeleteGoods (DeleteGoodsRequest) returns (DeleteGoodsResponse) {
  }
}

message GetVariantRequest {
  string client_id = 1;
  string pay_channel = 2;
}

message GetVariantResponse {
  Variant variant = 1;
  google.rpc.Status status = 2;
}

message GetProductRequest {
  string product_id = 1;
}

message GetProductResponse {
  Product product = 1;
  google.rpc.Status status = 2;
}

message QueryProductRequest {
  string product_id = 1;
  string product_name = 2;
  string is_onsale = 3;
  string type = 4;
  int32 page_size = 5;
  int32 page = 6;
}

message QueryProductResponse {
  ProductPage product_page = 1;
  google.rpc.Status status = 2;
}

message UpdateProductRequest {
  Product product = 1;
}

message UpdateProductResponse {
  google.rpc.Status status = 1;
}

message AddProductRequest {
  Product product = 1;
}

message AddProductResponse {
  google.rpc.Status status = 1;
}

message DeleteProductRequest {
  string product_id = 1;
}

message DeleteProductResponse {
  google.rpc.Status status = 1;
}

message GetGoodsRequest {
  string product_id = 1;
}

message GetGoodsResponse {
  Goods goods = 1;
  google.rpc.Status status = 2;
}

message QueryGoodsRequest {
  string shoppe_id = 1;
  string product_id = 2;
  string is_onsale = 3;
  int32 page_size = 4;
  int32 page = 5;
}

message QueryGoodsResponse {
  GoodsPage goods_page = 1;
  google.rpc.Status status = 2;
}

message UpdateGoodsRequest {
  Goods goods = 1;
}

message UpdateGoodsResponse {
  google.rpc.Status status = 1;
}

message AddGoodsRequest {
  Goods goods = 1;
}

message AddGoodsResponse {
  google.rpc.Status status = 1;
}

message DeleteGoodsRequest {
  string goods_id = 1;
}

message DeleteGoodsResponse {
  google.rpc.Status status = 1;
}